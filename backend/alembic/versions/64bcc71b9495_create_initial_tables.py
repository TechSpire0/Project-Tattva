"""Create initial tables

Revision ID: 64bcc71b9495
Revises: 
Create Date: 2025-08-29 20:13:49.814213

"""

# 1. Imports from alembic and sqlalchemy will already be here.
from alembic import op
import sqlalchemy as sa

# 2. THIS IS THE FIX: Add the import for geoalchemy2.
import geoalchemy2

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64bcc71b9495'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scientific_name', sa.String(), nullable=False),
    sa.Column('common_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('habitat', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scientific_name')
    )
    op.create_table('otoliths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=True),
    sa.Column('minio_path', sa.String(), nullable=False),
    sa.Column('collection_date', sa.Date(), nullable=True),
    sa.Column('age_estimation_years', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('minio_path')
    )
    op.create_table('sightings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('sighting_date', sa.Date(), nullable=False),
    sa.Column('sea_surface_temp_c', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('salinity_psu', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('chlorophyll_mg_m3', sa.Numeric(precision=7, scale=4), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

def downgrade() -> None:
    op.drop_table('sightings')
    op.drop_table('otoliths')
    op.drop_table('species')